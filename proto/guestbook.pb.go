// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/guestbook.proto

package guestbookpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Comment struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Comment              string   `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	FullName             string   `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Email                string   `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a75ec89e80a2e21, []int{0}
}

func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (m *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(m, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Comment) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Comment) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *Comment) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CreateCommentReq struct {
	Timestamp            string   `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommentReq) Reset()         { *m = CreateCommentReq{} }
func (m *CreateCommentReq) String() string { return proto.CompactTextString(m) }
func (*CreateCommentReq) ProtoMessage()    {}
func (*CreateCommentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a75ec89e80a2e21, []int{1}
}

func (m *CreateCommentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommentReq.Unmarshal(m, b)
}
func (m *CreateCommentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommentReq.Marshal(b, m, deterministic)
}
func (m *CreateCommentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommentReq.Merge(m, src)
}
func (m *CreateCommentReq) XXX_Size() int {
	return xxx_messageInfo_CreateCommentReq.Size(m)
}
func (m *CreateCommentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommentReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommentReq proto.InternalMessageInfo

func (m *CreateCommentReq) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

type CreateCommentRes struct {
	Timestamp            string   `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCommentRes) Reset()         { *m = CreateCommentRes{} }
func (m *CreateCommentRes) String() string { return proto.CompactTextString(m) }
func (*CreateCommentRes) ProtoMessage()    {}
func (*CreateCommentRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a75ec89e80a2e21, []int{2}
}

func (m *CreateCommentRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCommentRes.Unmarshal(m, b)
}
func (m *CreateCommentRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCommentRes.Marshal(b, m, deterministic)
}
func (m *CreateCommentRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCommentRes.Merge(m, src)
}
func (m *CreateCommentRes) XXX_Size() int {
	return xxx_messageInfo_CreateCommentRes.Size(m)
}
func (m *CreateCommentRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCommentRes.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCommentRes proto.InternalMessageInfo

func (m *CreateCommentRes) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

type UpdateCommentReq struct {
	Timestamp            string   `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCommentReq) Reset()         { *m = UpdateCommentReq{} }
func (m *UpdateCommentReq) String() string { return proto.CompactTextString(m) }
func (*UpdateCommentReq) ProtoMessage()    {}
func (*UpdateCommentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a75ec89e80a2e21, []int{3}
}

func (m *UpdateCommentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCommentReq.Unmarshal(m, b)
}
func (m *UpdateCommentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCommentReq.Marshal(b, m, deterministic)
}
func (m *UpdateCommentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCommentReq.Merge(m, src)
}
func (m *UpdateCommentReq) XXX_Size() int {
	return xxx_messageInfo_UpdateCommentReq.Size(m)
}
func (m *UpdateCommentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCommentReq.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCommentReq proto.InternalMessageInfo

func (m *UpdateCommentReq) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

type UpdateCommentRes struct {
	Timestamp            string   `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCommentRes) Reset()         { *m = UpdateCommentRes{} }
func (m *UpdateCommentRes) String() string { return proto.CompactTextString(m) }
func (*UpdateCommentRes) ProtoMessage()    {}
func (*UpdateCommentRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a75ec89e80a2e21, []int{4}
}

func (m *UpdateCommentRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCommentRes.Unmarshal(m, b)
}
func (m *UpdateCommentRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCommentRes.Marshal(b, m, deterministic)
}
func (m *UpdateCommentRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCommentRes.Merge(m, src)
}
func (m *UpdateCommentRes) XXX_Size() int {
	return xxx_messageInfo_UpdateCommentRes.Size(m)
}
func (m *UpdateCommentRes) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCommentRes.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCommentRes proto.InternalMessageInfo

func (m *UpdateCommentRes) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

type DeleteCommentReq struct {
	Timestamp            string   `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCommentReq) Reset()         { *m = DeleteCommentReq{} }
func (m *DeleteCommentReq) String() string { return proto.CompactTextString(m) }
func (*DeleteCommentReq) ProtoMessage()    {}
func (*DeleteCommentReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a75ec89e80a2e21, []int{5}
}

func (m *DeleteCommentReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommentReq.Unmarshal(m, b)
}
func (m *DeleteCommentReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommentReq.Marshal(b, m, deterministic)
}
func (m *DeleteCommentReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommentReq.Merge(m, src)
}
func (m *DeleteCommentReq) XXX_Size() int {
	return xxx_messageInfo_DeleteCommentReq.Size(m)
}
func (m *DeleteCommentReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommentReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommentReq proto.InternalMessageInfo

func (m *DeleteCommentReq) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

type DeleteCommentRes struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCommentRes) Reset()         { *m = DeleteCommentRes{} }
func (m *DeleteCommentRes) String() string { return proto.CompactTextString(m) }
func (*DeleteCommentRes) ProtoMessage()    {}
func (*DeleteCommentRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_9a75ec89e80a2e21, []int{6}
}

func (m *DeleteCommentRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCommentRes.Unmarshal(m, b)
}
func (m *DeleteCommentRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCommentRes.Marshal(b, m, deterministic)
}
func (m *DeleteCommentRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCommentRes.Merge(m, src)
}
func (m *DeleteCommentRes) XXX_Size() int {
	return xxx_messageInfo_DeleteCommentRes.Size(m)
}
func (m *DeleteCommentRes) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCommentRes.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCommentRes proto.InternalMessageInfo

func (m *DeleteCommentRes) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*Comment)(nil), "guestbook.Comment")
	proto.RegisterType((*CreateCommentReq)(nil), "guestbook.CreateCommentReq")
	proto.RegisterType((*CreateCommentRes)(nil), "guestbook.CreateCommentRes")
	proto.RegisterType((*UpdateCommentReq)(nil), "guestbook.UpdateCommentReq")
	proto.RegisterType((*UpdateCommentRes)(nil), "guestbook.UpdateCommentRes")
	proto.RegisterType((*DeleteCommentReq)(nil), "guestbook.DeleteCommentReq")
	proto.RegisterType((*DeleteCommentRes)(nil), "guestbook.DeleteCommentRes")
}

func init() { proto.RegisterFile("proto/guestbook.proto", fileDescriptor_9a75ec89e80a2e21) }

var fileDescriptor_9a75ec89e80a2e21 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x14, 0x24, 0xf1, 0xa3, 0xcd, 0x93, 0x16, 0x79, 0x28, 0x2c, 0xa9, 0x07, 0xe9, 0xc9, 0x83, 0x54,
	0xd1, 0x7f, 0x60, 0xbd, 0x78, 0xf1, 0x10, 0xf1, 0xe2, 0x45, 0x36, 0xc9, 0xab, 0x2c, 0x66, 0xbb,
	0x31, 0x6f, 0xe3, 0xff, 0xf6, 0x1f, 0x48, 0xb6, 0x69, 0xcb, 0x46, 0x89, 0xf6, 0x38, 0x33, 0x3b,
	0x33, 0xbc, 0x49, 0xe0, 0xb4, 0xac, 0x8c, 0x35, 0x57, 0x6f, 0x35, 0xb1, 0x4d, 0x8d, 0x79, 0x9f,
	0x39, 0x8c, 0xd1, 0x86, 0x98, 0x2e, 0x60, 0x30, 0x37, 0x5a, 0xd3, 0xd2, 0xe2, 0x18, 0x42, 0x95,
	0x8b, 0xe0, 0x3c, 0xb8, 0x88, 0x92, 0x50, 0xe5, 0x28, 0x60, 0x90, 0xad, 0x24, 0x11, 0x3a, 0x72,
	0x0d, 0x71, 0x02, 0xd1, 0xa2, 0x2e, 0x8a, 0xd7, 0xa5, 0xd4, 0x24, 0xf6, 0x9c, 0x36, 0x6c, 0x88,
	0x47, 0xa9, 0x09, 0x4f, 0xe0, 0x80, 0xb4, 0x54, 0x85, 0xd8, 0x77, 0xc2, 0x0a, 0x4c, 0xaf, 0xe1,
	0x78, 0x5e, 0x91, 0xb4, 0xd4, 0xb6, 0x25, 0xf4, 0x81, 0x67, 0x10, 0x59, 0xa5, 0x89, 0xad, 0xd4,
	0x65, 0xdb, 0xbb, 0x25, 0x7e, 0x71, 0xf0, 0xdf, 0x8e, 0xe7, 0x32, 0xdf, 0xb1, 0xa3, 0xe3, 0xf8,
	0x47, 0xc7, 0x3d, 0x15, 0xb4, 0x43, 0xc7, 0xe5, 0x0f, 0x07, 0x37, 0xd3, 0x72, 0x9d, 0x65, 0xc4,
	0xec, 0xde, 0x0f, 0x93, 0x35, 0xbc, 0xf9, 0x0a, 0x60, 0xdc, 0x3e, 0x7c, 0xa2, 0xea, 0x53, 0x65,
	0x84, 0x0f, 0x30, 0xf2, 0x86, 0xc0, 0xc9, 0x6c, 0xfb, 0x41, 0xbb, 0xa3, 0xc6, 0x3d, 0x22, 0x37,
	0x51, 0xde, 0xbd, 0x5e, 0x54, 0x77, 0xbb, 0xb8, 0x47, 0x74, 0x51, 0xde, 0x59, 0x5e, 0x54, 0x77,
	0xa2, 0xb8, 0x47, 0xe4, 0xbb, 0xd1, 0xcb, 0xd1, 0x46, 0x2d, 0xd3, 0xf4, 0xd0, 0xfd, 0xa4, 0xb7,
	0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x91, 0x7f, 0x53, 0x2a, 0xbd, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CommentServiceClient is the client API for CommentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CommentServiceClient interface {
	CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*CreateCommentRes, error)
	UpdateComment(ctx context.Context, in *UpdateCommentReq, opts ...grpc.CallOption) (*UpdateCommentRes, error)
	DeleteComment(ctx context.Context, in *DeleteCommentReq, opts ...grpc.CallOption) (*DeleteCommentRes, error)
}

type commentServiceClient struct {
	cc *grpc.ClientConn
}

func NewCommentServiceClient(cc *grpc.ClientConn) CommentServiceClient {
	return &commentServiceClient{cc}
}

func (c *commentServiceClient) CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*CreateCommentRes, error) {
	out := new(CreateCommentRes)
	err := c.cc.Invoke(ctx, "/guestbook.CommentService/CreateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentServiceClient) UpdateComment(ctx context.Context, in *UpdateCommentReq, opts ...grpc.CallOption) (*UpdateCommentRes, error) {
	out := new(UpdateCommentRes)
	err := c.cc.Invoke(ctx, "/guestbook.CommentService/UpdateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *commentServiceClient) DeleteComment(ctx context.Context, in *DeleteCommentReq, opts ...grpc.CallOption) (*DeleteCommentRes, error) {
	out := new(DeleteCommentRes)
	err := c.cc.Invoke(ctx, "/guestbook.CommentService/DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CommentServiceServer is the server API for CommentService service.
type CommentServiceServer interface {
	CreateComment(context.Context, *CreateCommentReq) (*CreateCommentRes, error)
	UpdateComment(context.Context, *UpdateCommentReq) (*UpdateCommentRes, error)
	DeleteComment(context.Context, *DeleteCommentReq) (*DeleteCommentRes, error)
}

// UnimplementedCommentServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCommentServiceServer struct {
}

func (*UnimplementedCommentServiceServer) CreateComment(ctx context.Context, req *CreateCommentReq) (*CreateCommentRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateComment not implemented")
}
func (*UnimplementedCommentServiceServer) UpdateComment(ctx context.Context, req *UpdateCommentReq) (*UpdateCommentRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateComment not implemented")
}
func (*UnimplementedCommentServiceServer) DeleteComment(ctx context.Context, req *DeleteCommentReq) (*DeleteCommentRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteComment not implemented")
}

func RegisterCommentServiceServer(s *grpc.Server, srv CommentServiceServer) {
	s.RegisterService(&_CommentService_serviceDesc, srv)
}

func _CommentService_CreateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentServiceServer).CreateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guestbook.CommentService/CreateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentServiceServer).CreateComment(ctx, req.(*CreateCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentService_UpdateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentServiceServer).UpdateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guestbook.CommentService/UpdateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentServiceServer).UpdateComment(ctx, req.(*UpdateCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _CommentService_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCommentReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CommentServiceServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/guestbook.CommentService/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CommentServiceServer).DeleteComment(ctx, req.(*DeleteCommentReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _CommentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "guestbook.CommentService",
	HandlerType: (*CommentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateComment",
			Handler:    _CommentService_CreateComment_Handler,
		},
		{
			MethodName: "UpdateComment",
			Handler:    _CommentService_UpdateComment_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _CommentService_DeleteComment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/guestbook.proto",
}
